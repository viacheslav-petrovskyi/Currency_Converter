{"version":3,"sources":["api.ts","components/CurrencyConverter/CurrencyConverter.tsx","components/CurrencyHeader/CurrencyHeader.tsx","App.tsx","index.tsx"],"names":["URL","getCurrency","a","fetch","response","json","CurrencyConverter","sum","usdBuy","usdSale","eurBuy","eurSale","UAH","USD","EUR","BUY","SALE","useState","query","SetQuery","showCurrency1","setShowCurrency1","showCurrency2","setShowCurrency2","buyOrSale","setBuyOrSale","toFixed","className","value","onChange","event","target","type","disabled","onClick","CurrencyHeader","App","setUsdBuy","setUsdSale","setEurBuy","setEurSale","useEffect","currentCurrency","find","currency","ccy","buy","sale","currencyFromServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f73603f.chunk.js","sourcesContent":["const URL = 'https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11';\n\nexport async function getCurrency(): Promise<CurrencyRate[]> {\n  const response = await fetch(URL);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './CurrencyConverter.scss';\n\ntype Props = {\n  usdBuy: number,\n  usdSale: number,\n  eurBuy: number,\n  eurSale: number,\n};\n\nexport const CurrencyConverter: React.FC<Props> = ({\n  usdBuy,\n  usdSale,\n  eurBuy,\n  eurSale,\n}) => {\n  const UAH = 'UAH';\n  const USD = 'USD';\n  const EUR = 'EUR';\n\n  const BUY = 'BUY';\n  const SALE = 'SALE';\n\n  const [query, SetQuery] = useState('');\n  const [showCurrency1, setShowCurrency1] = useState(UAH);\n  const [showCurrency2, setShowCurrency2] = useState(USD);\n  const [buyOrSale, setBuyOrSale] = useState(BUY);\n\n  let sum;\n\n  if (showCurrency1 === UAH && showCurrency2 === USD && buyOrSale === BUY) {\n    sum = (+query / usdBuy).toFixed(2);\n  }\n\n  if (showCurrency1 === UAH && showCurrency2 === USD && buyOrSale === SALE) {\n    sum = (+query / usdSale).toFixed(2);\n  }\n\n  if (showCurrency1 === UAH && showCurrency2 === EUR && buyOrSale === BUY) {\n    sum = (+query / eurBuy).toFixed(2);\n  }\n\n  if (showCurrency1 === UAH && showCurrency2 === EUR && buyOrSale === SALE) {\n    sum = (+query / eurSale).toFixed(2);\n  }\n\n  if (showCurrency1 === USD && showCurrency2 === UAH && buyOrSale === BUY) {\n    sum = (+query * usdBuy).toFixed(2);\n  }\n\n  if (showCurrency1 === USD && showCurrency2 === UAH && buyOrSale === SALE) {\n    sum = (+query * usdSale).toFixed(2);\n  }\n\n  if (showCurrency1 === USD && showCurrency2 === EUR && buyOrSale === BUY) {\n    sum = (+query * (usdBuy / eurBuy)).toFixed(2);\n  }\n\n  if (showCurrency1 === USD && showCurrency2 === EUR && buyOrSale === SALE) {\n    sum = (+query * (usdSale / eurSale)).toFixed(2);\n  }\n\n  if (showCurrency1 === EUR && showCurrency2 === UAH && buyOrSale === BUY) {\n    sum = (+query * eurBuy).toFixed(2);\n  }\n\n  if (showCurrency1 === EUR && showCurrency2 === UAH && buyOrSale === SALE) {\n    sum = (+query * eurSale).toFixed(2);\n  }\n\n  if (showCurrency1 === EUR && showCurrency2 === USD && buyOrSale === BUY) {\n    sum = (+query * (eurBuy / usdBuy)).toFixed(2);\n  }\n\n  if (showCurrency1 === EUR && showCurrency2 === USD && buyOrSale === SALE) {\n    sum = (+query * (eurSale / usdSale)).toFixed(2);\n  }\n\n  return (\n    <>\n      <div className=\"converter\">\n        <select\n          className=\"converter__select\"\n          value={buyOrSale}\n          onChange={(event) => setBuyOrSale(event.target.value)}\n        >\n          <option value={BUY}>Buy</option>\n          <option value={SALE}>Sale</option>\n        </select>\n        <input\n          className=\"converter__input\"\n          type=\"number\"\n          value={query}\n          onChange={(event) => {\n            SetQuery(event.target.value);\n          }}\n        />\n        <select\n          className=\"converter__select\"\n          value={showCurrency1}\n          onChange={(event) => setShowCurrency1(event.target.value)}\n        >\n          <option\n            value={UAH}\n            disabled={showCurrency2 === UAH}\n          >\n            UAH\n          </option>\n          <option\n            value={USD}\n            disabled={showCurrency2 === USD}\n          >\n            USD\n          </option>\n          <option\n            value={EUR}\n            disabled={showCurrency2 === EUR}\n          >\n            EUR\n          </option>\n        </select>\n        <button\n          className=\"converter__button\"\n          type=\"button\"\n          onClick={() => {\n            setShowCurrency1(showCurrency2);\n            setShowCurrency2(showCurrency1);\n          }}\n        >\n          &#8646;\n        </button>\n        <select\n          className=\"converter__select\"\n          value={showCurrency2}\n          onChange={(event) => setShowCurrency2(event.target.value)}\n        >\n          <option\n            value={UAH}\n            disabled={showCurrency1 === UAH}\n          >\n            UAH\n          </option>\n          <option\n            value={USD}\n            disabled={showCurrency1 === USD}\n          >\n            USD\n          </option>\n          <option\n            value={EUR}\n            disabled={showCurrency1 === EUR}\n          >\n            EUR\n          </option>\n        </select>\n      </div>\n      <div className=\"converter__sum\">\n        <p>{sum}</p>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './CurrencyHeader.scss';\n\ntype Props = {\n  usdBuy: number,\n  usdSale: number,\n  eurBuy: number,\n  eurSale: number,\n};\n\nexport const CurrencyHeader: React.FC<Props> = ({\n  usdBuy,\n  usdSale,\n  eurBuy,\n  eurSale,\n}) => (\n  <div className=\"header\">\n    <p>{`USD BUY: ${usdBuy.toFixed(4)}`}</p>\n    <p>{`USD SALE: ${usdSale.toFixed(4)}`}</p>\n    <p>{`EUR BUY: ${eurBuy.toFixed(4)}`}</p>\n    <p>{`EUR SALE: ${eurSale.toFixed(4)}`}</p>\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getCurrency } from './api';\nimport './App.scss';\nimport { CurrencyConverter } from './components/CurrencyConverter/CurrencyConverter';\nimport { CurrencyHeader } from './components/CurrencyHeader/CurrencyHeader';\n\nexport const App: React.FC = () => {\n  const [usdBuy, setUsdBuy] = useState(0);\n  const [usdSale, setUsdSale] = useState(0);\n  const [eurBuy, setEurBuy] = useState(0);\n  const [eurSale, setEurSale] = useState(0);\n\n  useEffect(() => {\n    const currencyFromServer = async () => {\n      const currentCurrency = await getCurrency();\n\n      const USD = currentCurrency.find(currency => currency.ccy === 'USD');\n      const EUR = currentCurrency.find(currency => currency.ccy === 'EUR');\n\n      if (USD) {\n        setUsdBuy(+USD.buy);\n        setUsdSale(+USD.sale);\n      }\n\n      if (EUR) {\n        setEurBuy(+EUR.buy);\n        setEurSale(+EUR.sale);\n      }\n    };\n\n    currencyFromServer();\n  }, []);\n\n  return (\n    <>\n      <CurrencyHeader\n        usdBuy={usdBuy}\n        usdSale={usdSale}\n        eurBuy={eurBuy}\n        eurSale={eurSale}\n      />\n\n      <CurrencyConverter\n        usdBuy={usdBuy}\n        usdSale={usdSale}\n        eurBuy={eurBuy}\n        eurSale={eurSale}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}